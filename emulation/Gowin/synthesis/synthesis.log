
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.41+111 (git sha1 4b67f3757, clang++ 10.0.0-4ubuntu1 -fPIC -Os)

-- Executing script file `booth_multiplier_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../booth_multiplier_wrapper.v
Parsing Verilog input from `../../booth_multiplier_wrapper.v' to AST representation.
Generating RTLIL representation for module `\booth_multiplier_wrapper'.
Warning: Replacing memory \vectOut with list of registers. See ../../booth_multiplier_wrapper.v:55
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../source/booth_multiplier.v
Parsing Verilog input from `../../../source/booth_multiplier.v' to AST representation.
Generating RTLIL representation for module `\booth_multiplier'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../source/booth_substep.v
Parsing Verilog input from `../../../source/booth_substep.v' to AST representation.
Generating RTLIL representation for module `\booth_substep'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../../source/eight_bit_adder_subractor.v
Parsing Verilog input from `../../../source/eight_bit_adder_subractor.v' to AST representation.
Generating RTLIL representation for module `\eight_bit_adder_subractor'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../../source/fa.v
Parsing Verilog input from `../../../source/fa.v' to AST representation.
Generating RTLIL representation for module `\fa'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../../source/xor2.v
Parsing Verilog input from `../../../source/xor2.v' to AST representation.
Generating RTLIL representation for module `\xor2'.
Successfully finished Verilog frontend.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Reprocessing module booth_multiplier because instantiated module booth_substep has become available.
Generating RTLIL representation for module `\booth_multiplier'.
Reprocessing module booth_substep because instantiated module eight_bit_adder_subractor has become available.
Generating RTLIL representation for module `\booth_substep'.

7.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2

7.3. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Removed 0 unused modules.
Mapping positional arguments of cell booth_substep.myadd (eight_bit_adder_subractor).
Mapping positional arguments of cell eight_bit_adder_subractor.fa8 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa7 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa6 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa5 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa4 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa3 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa2 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa1 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.x7 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x6 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x5 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x4 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x3 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x2 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x1 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x0 (xor2).
Mapping positional arguments of cell booth_multiplier.step8 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step7 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step6 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step5 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step4 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step3 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step2 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step1 (booth_substep).

8. Executing SYNTH_GOWIN pass.

8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Successfully finished Verilog frontend.

8.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

8.3. Executing HIERARCHY pass (managing design hierarchy).

8.3.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2

8.3.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Removed 0 unused modules.

8.4. Executing PROC pass (convert processes to netlists).

8.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$322'.
Cleaned up 1 empty switch.

8.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$316 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$312 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$310 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$308 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$306 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$304 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$296 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$292 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$290 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$288 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$286 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$284 in module DFFS.
Marked 3 switch rules as full_case in process $proc$../../../source/booth_substep.v:33$89 in module booth_substep.
Removed 1 dead cases from process $proc$../../booth_multiplier_wrapper.v:46$3 in module booth_multiplier_wrapper.
Marked 3 switch rules as full_case in process $proc$../../booth_multiplier_wrapper.v:46$3 in module booth_multiplier_wrapper.
Removed a total of 1 dead cases.

8.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 78 assignments to connections.

8.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$427'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$369'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$339'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$319'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$317'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$315'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$313'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$311'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$309'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$307'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$305'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$303'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$301'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$299'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$297'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$295'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$293'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$291'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$289'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$287'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$285'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$283'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$281'.
  Set init value: \Q = 1'0

8.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$316'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$312'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$296'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$292'.

8.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~27 debug messages>

8.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$427'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
     1/8: $1$lookahead\mem3$381[15:0]$398
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$373[3:0]$394
     3/8: $1$lookahead\mem2$380[15:0]$397
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$372[3:0]$393
     5/8: $1$lookahead\mem1$379[15:0]$396
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$371[3:0]$392
     7/8: $1$lookahead\mem0$378[15:0]$395
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$370[3:0]$391
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$369'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
     1/4: $1$lookahead\mem1$345[15:0]$354
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$341[3:0]$352
     3/4: $1$lookahead\mem0$344[15:0]$353
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$340[3:0]$351
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$339'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
     1/2: $1$lookahead\mem$326[15:0]$331
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$324[3:0]$330
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$322'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$319'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$317'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$316'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$315'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$313'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$312'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$311'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$310'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$309'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$308'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$307'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$306'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$305'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$304'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$303'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$302'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$301'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$300'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$299'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$297'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$296'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$295'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$293'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$292'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$291'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$290'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$289'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$288'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$287'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$286'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$285'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$284'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$283'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$282'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$281'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$280'.
Creating decoders for process `\booth_substep.$proc$../../../source/booth_substep.v:33$89'.
     1/7: $3\next_acc[7:7]
     2/7: $2\next_acc[7:7]
     3/7: $1\next_acc[7:0] [7]
     4/7: $1\next_acc[7:0] [6:0]
     5/7: $1\next_Q[7:0] [7]
     6/7: $1\next_Q[7:0] [6:0]
     7/7: $1\q0_next[0:0]
Creating decoders for process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
Creating decoders for process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:78$86'.
Creating decoders for process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
     1/16: $3$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$21
     2/16: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$20
     3/16: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_DATA[7:0]$19
     4/16: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_ADDR[2:0]$18
     5/16: $2$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$17
     6/16: $2$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR[0:0]$16
     7/16: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$13
     8/16: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_DATA[7:0]$12
     9/16: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_ADDR[2:0]$11
    10/16: $1$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$10
    11/16: $1$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR[0:0]$9
    12/16: $0\vectOut[1][7:0]
    13/16: $0\vectOut[0][7:0]
    14/16: $0\multiplicand[7:0]
    15/16: $0\multiplier[7:0]
    16/16: $0\Dout_emu[7:0]

8.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\booth_substep.\next_acc' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$89'.
No latch inferred for signal `\booth_substep.\next_Q' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$89'.
No latch inferred for signal `\booth_substep.\q0_next' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$89'.
No latch inferred for signal `\booth_multiplier.\Q[0]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[1]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[2]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[3]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[4]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[5]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\Q[6]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[0]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[1]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[2]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[3]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[4]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[5]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[6]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
No latch inferred for signal `\booth_multiplier.\acc[7]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.

8.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$625' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$626' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$627' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$628' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$370' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$629' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$371' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$630' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$372' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$631' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$373' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$632' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$378' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$633' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$379' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$634' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$380' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$635' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$381' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
  created $dff cell `$procdff$636' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$637' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$638' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$340' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$341' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$640' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$344' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$345' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
  created $dff cell `$procdff$642' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$324' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
  created $dff cell `$procdff$644' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$326' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$322'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$322'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318'.
  created $adff cell `$procdff$646' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$316'.
  created $adff cell `$procdff$647' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314'.
  created $adff cell `$procdff$648' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$312'.
  created $adff cell `$procdff$649' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$310'.
  created $dff cell `$procdff$650' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$308'.
  created $dff cell `$procdff$651' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$306'.
  created $dff cell `$procdff$652' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$304'.
  created $dff cell `$procdff$653' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$302'.
  created $dff cell `$procdff$654' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$300'.
  created $dff cell `$procdff$655' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298'.
  created $adff cell `$procdff$656' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$296'.
  created $adff cell `$procdff$657' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294'.
  created $adff cell `$procdff$658' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$292'.
  created $adff cell `$procdff$659' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$290'.
  created $dff cell `$procdff$660' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$288'.
  created $dff cell `$procdff$661' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$286'.
  created $dff cell `$procdff$662' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$284'.
  created $dff cell `$procdff$663' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$282'.
  created $dff cell `$procdff$664' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$280'.
  created $dff cell `$procdff$665' with positive edge clock.
Creating register for signal `\booth_multiplier.\__product' using process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:78$86'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\Dout_emu' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$667' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\multiplier' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$668' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\multiplicand' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$669' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\vectOut[0]' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$670' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\vectOut[1]' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$671' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$672' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$673' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_ADDR' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_DATA' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$675' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
  created $dff cell `$procdff$676' with positive edge clock.

8.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$427'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$382'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$369'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$346'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$339'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$327'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$322'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$319'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$318'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$317'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$316'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$315'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$314'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$313'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$312'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$311'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$310'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$310'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$309'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$308'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$308'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$307'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$306'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$306'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$305'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$304'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$304'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$303'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$302'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$302'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$301'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$300'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$299'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$298'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$297'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$296'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$295'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$294'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$293'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$292'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$291'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$290'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$290'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$289'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$288'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$288'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$287'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$286'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$286'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$285'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$284'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$284'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$283'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$282'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$282'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$281'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$280'.
Found and cleaned up 3 empty switches in `\booth_substep.$proc$../../../source/booth_substep.v:33$89'.
Removing empty process `booth_substep.$proc$../../../source/booth_substep.v:33$89'.
Removing empty process `booth_multiplier.$proc$../../../source/booth_multiplier.v:0$87'.
Removing empty process `booth_multiplier.$proc$../../../source/booth_multiplier.v:78$86'.
Found and cleaned up 3 empty switches in `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
Removing empty process `booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$3'.
Cleaned up 27 empty switches.

8.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_substep.
<suppressed ~7 debug messages>
Optimizing module fa.
Optimizing module eight_bit_adder_subractor.
Optimizing module booth_multiplier.
Optimizing module xor2.
Optimizing module booth_multiplier_wrapper.
<suppressed ~1 debug messages>

8.5. Executing FLATTEN pass (flatten design).
Deleting now unused module booth_substep.
Deleting now unused module fa.
Deleting now unused module eight_bit_adder_subractor.
Deleting now unused module booth_multiplier.
Deleting now unused module xor2.
<suppressed ~26 debug messages>

8.6. Executing TRIBUF pass.

8.7. Executing DEMINOUT pass (demote inout ports to input or output).

8.8. Executing SYNTH pass.

8.8.1. Executing PROC pass (convert processes to netlists).

8.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.8.1.4. Executing PROC_INIT pass (extract init attributes).

8.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

8.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~47 debug messages>

8.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 48 unused cells and 614 unused wires.
<suppressed ~65 debug messages>

8.8.4. Executing CHECK pass (checking for obvious problems).
Checking module booth_multiplier_wrapper...
Found and reported 0 problems.

8.8.5. Executing OPT pass (performing simple optimizations).

8.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step1.$procmux$525.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step1.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step2.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step2.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step3.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step3.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step4.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step4.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step5.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step5.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step6.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step6.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step7.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step7.$procmux$531.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step8.$procmux$525.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step8.$procmux$531.
    dead port 1/2 on $mux $procmux$551.
    dead port 1/2 on $mux $procmux$554.
    dead port 1/2 on $mux $procmux$560.
    dead port 1/2 on $mux $procmux$566.
    dead port 1/2 on $mux $procmux$572.
Removed 21 multiplexer ports.
<suppressed ~32 debug messages>

8.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
    Consolidated identical input bits for $mux cell $procmux$557:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$557_Y
      New ports: A=1'1, B=1'0, Y=$procmux$557_Y [0]
      New connections: $procmux$557_Y [7:1] = { $procmux$557_Y [0] $procmux$557_Y [0] $procmux$557_Y [0] $procmux$557_Y [0] $procmux$557_Y [0] $procmux$557_Y [0] $procmux$557_Y [0] }
  Optimizing cells in module \booth_multiplier_wrapper.
    Consolidated identical input bits for $mux cell $procmux$587:
      Old ports: A=$2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$20, B=8'00000000, Y=$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8
      New ports: A=$procmux$557_Y [0], B=1'0, Y=$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0]
      New connections: $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [7:1] = { $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_EN[7:0]$8 [0] }
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 2 changes.

8.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

8.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

8.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

8.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

8.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.16. Finished OPT passes. (There is nothing left to do.)

8.8.6. Executing FSM pass (extract and optimize FSM).

8.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).

8.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.8.7. Executing OPT pass (performing simple optimizations).

8.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

8.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$671 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.__product [15:8], Q = \vectOut[1]).
Adding EN signal on $procdff$670 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.__product [7:0], Q = \vectOut[0]).
Adding EN signal on $procdff$669 ($dff) from module booth_multiplier_wrapper (D = $memrd$\stimIn$../../booth_multiplier_wrapper.v:51$15_DATA, Q = \multiplicand).
Adding EN signal on $procdff$668 ($dff) from module booth_multiplier_wrapper (D = $memrd$\stimIn$../../booth_multiplier_wrapper.v:50$14_DATA, Q = \multiplier).
Adding EN signal on $procdff$667 ($dff) from module booth_multiplier_wrapper (D = $3$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$21, Q = \Dout_emu).
Adding SRST signal on $flatten\u_booth_multiplier.$procdff$666 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.step1.myadd.fa1.sum, Q = \u_booth_multiplier.__product [0], rval = 1'0).

8.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 9 unused cells and 8 unused wires.
<suppressed ~10 debug messages>

8.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

8.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

8.8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.23. Finished OPT passes. (There is nothing left to do.)

8.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 address bits (of 3) from memory init port booth_multiplier_wrapper.$auto$proc_memwr.cc:45:proc_memwr$677 (stimIn).
Removed top 31 address bits (of 32) from memory read port booth_multiplier_wrapper.$memrd$\stimIn$../../booth_multiplier_wrapper.v:50$14 (stimIn).
Removed top 31 address bits (of 32) from memory read port booth_multiplier_wrapper.$memrd$\stimIn$../../booth_multiplier_wrapper.v:51$15 (stimIn).
Removed top 2 bits (of 3) from mux cell booth_multiplier_wrapper.$procmux$593 ($mux).
Removed top 2 bits (of 3) from mux cell booth_multiplier_wrapper.$procmux$569 ($mux).
Removed top 2 bits (of 3) from wire booth_multiplier_wrapper.$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_ADDR[2:0]$6.
Removed top 2 bits (of 3) from wire booth_multiplier_wrapper.$2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$2_ADDR[2:0]$18.

8.8.9. Executing PEEPOPT pass (run peephole optimizers).

8.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

8.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module booth_multiplier_wrapper:
  created 0 $alu and 0 $macc cells.

8.8.12. Executing SHARE pass (SAT-based resource sharing).

8.8.13. Executing OPT pass (performing simple optimizations).

8.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.13.9. Finished OPT passes. (There is nothing left to do.)

8.8.14. Executing MEMORY pass.

8.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing booth_multiplier_wrapper.stimIn write port 0.

8.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\stimIn'[0] in module `\booth_multiplier_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\stimIn'[1] in module `\booth_multiplier_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.

8.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 2 unused cells and 18 unused wires.
<suppressed ~3 debug messages>

8.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory booth_multiplier_wrapper.stimIn by address:
  Merging ports 0, 1 (address 1'1).

8.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory booth_multiplier_wrapper.stimIn
<suppressed ~636 debug messages>

8.10. Executing TECHMAP pass (map to technology primitives).

8.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

8.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

8.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

8.11. Executing OPT pass (performing simple optimizations).

8.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~30 debug messages>

8.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.11.3. Executing OPT_DFF pass (perform DFF optimizations).

8.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 1 unused cells and 20 unused wires.
<suppressed ~2 debug messages>

8.11.5. Finished fast OPT passes.

8.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \stimIn in module \booth_multiplier_wrapper:
  created 2 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of booth_multiplier_wrapper.stimIn: $\stimIn$rdreg[0]
  read interface: 1 $dff and 0 $mux cells.
  write interface: 2 write mux blocks.

8.13. Executing OPT pass (performing simple optimizations).

8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~4 debug messages>

8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\stimIn[1]$949 ($dff) from module booth_multiplier_wrapper (D = \Din_emu, Q = \stimIn[1]).
Adding EN signal on $memory\stimIn[0]$947 ($dff) from module booth_multiplier_wrapper (D = \Din_emu, Q = \stimIn[0]).

8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.16. Rerunning OPT passes. (Maybe there is more to do..)

8.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.20. Executing OPT_DFF pass (perform DFF optimizations).

8.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.23. Finished OPT passes. (There is nothing left to do.)

8.14. Executing TECHMAP pass (map to technology primitives).

8.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~559 debug messages>

8.15. Executing OPT pass (performing simple optimizations).

8.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~63 debug messages>

8.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

8.15.3. Executing OPT_DFF pass (perform DFF optimizations).

8.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 7 unused cells and 17 unused wires.
<suppressed ~8 debug messages>

8.15.5. Finished fast OPT passes.

8.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port booth_multiplier_wrapper.Addr_emu using IBUF.
Mapping port booth_multiplier_wrapper.Din_emu using IBUF.
Mapping port booth_multiplier_wrapper.Dout_emu using OBUF.
Mapping port booth_multiplier_wrapper.clk_dut using IBUF.
Mapping port booth_multiplier_wrapper.clk_emu using IBUF.
Mapping port booth_multiplier_wrapper.get_emu using IBUF.
Mapping port booth_multiplier_wrapper.load_emu using IBUF.

8.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.19. Executing TECHMAP pass (map to technology primitives).

8.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~93 debug messages>

8.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~16 debug messages>

8.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

8.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

8.23. Executing ABC9 pass.

8.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module booth_multiplier_wrapper.
Found 0 SCCs.

8.23.4. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.5. Executing PROC pass (convert processes to netlists).

8.23.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.23.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.23.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.23.5.4. Executing PROC_INIT pass (extract init attributes).

8.23.5.5. Executing PROC_ARST pass (detect async resets in processes).

8.23.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.23.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.23.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.23.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.23.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.23.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.23.5.12. Executing OPT_EXPR pass (perform const folding).

8.23.6. Executing TECHMAP pass (map to technology primitives).

8.23.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.23.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~248 debug messages>

8.23.7. Executing OPT pass (performing simple optimizations).

8.23.7.1. Executing OPT_EXPR pass (perform const folding).

8.23.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

8.23.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

8.23.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

8.23.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

8.23.7.6. Executing OPT_DFF pass (perform DFF optimizations).

8.23.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

8.23.7.8. Executing OPT_EXPR pass (perform const folding).

8.23.7.9. Finished OPT passes. (There is nothing left to do.)

8.23.8. Executing TECHMAP pass (map to technology primitives).

8.23.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

8.23.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

8.23.9. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

8.23.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~128 debug messages>

8.23.11. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

8.23.13. Executing TECHMAP pass (map to technology primitives).

8.23.13.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.23.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~250 debug messages>

8.23.14. Executing OPT pass (performing simple optimizations).

8.23.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.23.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.23.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.23.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.23.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.23.14.6. Executing OPT_DFF pass (perform DFF optimizations).

8.23.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.23.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.23.14.9. Finished OPT passes. (There is nothing left to do.)

8.23.15. Executing AIGMAP pass (map logic to AIG).

8.23.16. Executing AIGMAP pass (map logic to AIG).
Module booth_multiplier_wrapper: replaced 361 cells with 2233 new cells, skipped 526 cells.
  replaced 3 cell types:
      98 $_OR_
     191 $_XOR_
      72 $_MUX_
  not replaced 10 cell types:
     145 $scopeinfo
       4 $_NOT_
     158 $_AND_
      14 DFF
      55 DFFE
       1 DFFR
      15 IBUF
       8 OBUF
      70 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      56 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111

8.23.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.16.3. Executing XAIGER backend.
<suppressed ~81 debug messages>
Extracted 1045 AND gates and 2683 wires from module `booth_multiplier_wrapper' to a netlist network with 106 inputs and 144 outputs.

8.23.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

8.23.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    106/    144  and =     964  lev =   83 (3.17)  mem = 0.02 MB  box = 126  bb = 126
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    106/    144  and =    1374  lev =   69 (2.51)  mem = 0.02 MB  ch =  261  box = 126  bb = 126
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =    1374.  Ch =   220.  Total mem =    0.30 MB. Peak cut mem =    0.02 MB.
ABC: P:  Del = 20459.00.  Ar =    1228.0.  Edge =      881.  Cut =    24359.  T =     0.00 sec
ABC: P:  Del = 20321.00.  Ar =    1153.0.  Edge =      809.  Cut =    24506.  T =     0.00 sec
ABC: P:  Del = 20321.00.  Ar =    1135.0.  Edge =      887.  Cut =    53286.  T =     0.01 sec
ABC: F:  Del = 20264.00.  Ar =     817.0.  Edge =      790.  Cut =    37557.  T =     0.01 sec
ABC: A:  Del = 20264.00.  Ar =     693.0.  Edge =      739.  Cut =    36743.  T =     0.01 sec
ABC: A:  Del = 20264.00.  Ar =     682.0.  Edge =      733.  Cut =    36048.  T =     0.01 sec
ABC: Total time =     0.04 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    106/    144  and =    2260  lev =   83 (2.66)  mem = 0.03 MB  box = 126  bb = 126
ABC: Mapping (K=8)  :  lut =    134  edge =     613  lev =   13 (0.64)  levB =   14  mem = 0.01 MB
ABC: LUT = 134 : 2=28 20.9 %  3=22 16.4 %  4=18 13.4 %  5=22 16.4 %  6=15 11.2 %  7=13 9.7 %  8=16 11.9 %  Ave = 4.57
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 1.01 seconds, total: 1.01 seconds

8.23.16.6. Executing AIGER frontend.
<suppressed ~512 debug messages>
Removed 3769 unused cells and 4287 unused wires.

8.23.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      135
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:      130
Removing temp directory.

8.23.17. Executing TECHMAP pass (map to technology primitives).

8.23.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

8.23.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>
Removed 2 unused cells and 3514 unused wires.

8.24. Executing TECHMAP pass (map to technology primitives).

8.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.24.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$3953030138bcc1640cafbc8608290d88aa440994\$lut for cells of type $lut.
Using template $paramod$724b2a2bc5faa0101e7880edc04d8f08550dac91\$lut for cells of type $lut.
Using template $paramod$2d7b201485e5b439d8e0de44933bd750f36dda6b\$lut for cells of type $lut.
Using template $paramod$d9fc6743cf048751ba75bc33ac5f7f5ee85bfa97\$lut for cells of type $lut.
Using template $paramod$bf0916c6d7935eef0257c8c924841f67bcefce14\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$0c24af912d9f66433047f6e60eb84f7f4b9f0d2c\$lut for cells of type $lut.
Using template $paramod$d8258fd6c3b9515b1b7a94aafe80072a38d2e3b0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$317ff57b1b9f924b3b95f8921245a5150fd7cdbd\$lut for cells of type $lut.
Using template $paramod$e7e692df853cc7b984d7d92e84302090364e038e\$lut for cells of type $lut.
Using template $paramod$9d42e945ad075788981a4eb77d55d24cfa7e94ae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$f7c86032a4a1be6bee51b1b7d2a46c9e81b3e9de\$lut for cells of type $lut.
Using template $paramod$7b168248e03680f8cefd77addd4127dc5178b860\$lut for cells of type $lut.
Using template $paramod$003c9165b75a6891df2a771201dae25dfc94021a\$lut for cells of type $lut.
Using template $paramod$61dc9aba6758f16e2d911765e65cbc255291c27d\$lut for cells of type $lut.
Using template $paramod$cf027e66652c88fcc3ee0d11bed7616b3baf5c1d\$lut for cells of type $lut.
Using template $paramod$9d057e931dc6d059aff50a469ec3b074400e3501\$lut for cells of type $lut.
Using template $paramod$6e2eee92968bedaa82205c2b2d68f62e7d6391be\$lut for cells of type $lut.
Using template $paramod$dc58ee72d1e6b4cdd7eaf661dd49c7ebaaf80196\$lut for cells of type $lut.
Using template $paramod$d61310b0a7862d9f6640cb21136f2832bba7b2ad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$10ebfbbfba8bfa57b6ea5985b43126f9dceb0ae6\$lut for cells of type $lut.
Using template $paramod$83724ce2484ff8ff068b309ca2526123a31cf12a\$lut for cells of type $lut.
Using template $paramod$f06b6410c115f7e62b208ebb6c1d1e6adc68c4db\$lut for cells of type $lut.
Using template $paramod$fb57ad3bde73d0e6010c2f82a720ba208db9d62f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod$b83a741bc8c97ed8f652e3e9bfabc38e9f5bd5f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$fb86003c53ee6c911a78968dbee83f2f8d71971a\$lut for cells of type $lut.
Using template $paramod$a1cb294efc99acd915df63629bf5b2ec64b51bd3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$3929a4565b65676d395c498a04189057f2402116\$lut for cells of type $lut.
Using template $paramod$9c3deff0fbbb960b65144d49de1dbc5768985f7c\$lut for cells of type $lut.
Using template $paramod$cc4bbe7f72249c45859cb8f9b6b15fe58284d4cf\$lut for cells of type $lut.
Using template $paramod$1a535951bbf231262bbcc0170aa22019817f5708\$lut for cells of type $lut.
Using template $paramod$2905e24e169eb470c28c217e47ece882e7323624\$lut for cells of type $lut.
Using template $paramod$8910885db10a3a9eafc8fe3c275e288c68df9103\$lut for cells of type $lut.
Using template $paramod$a321040baddde083dd25e62ab13a00998cc85400\$lut for cells of type $lut.
Using template $paramod$8e85e7848bfcbdaf2e8cdf1b23d13adad488b839\$lut for cells of type $lut.
Using template $paramod$176f3d32dd742b643a18bc035c5e10cac81d69ff\$lut for cells of type $lut.
Using template $paramod$fb7cd29bb599fd1ba9b63f3e78d9cefa6bd23b01\$lut for cells of type $lut.
Using template $paramod$ac7fa8542537d25f3870908165d0345b26d4120d\$lut for cells of type $lut.
Using template $paramod$a24b0a9d8a9b77b42f564ccd348d4d6f7fb4253a\$lut for cells of type $lut.
Using template $paramod$70aaf70eb32e221098b6eb52bf2b64b3c0b4a0fb\$lut for cells of type $lut.
Using template $paramod$84703685dd660e8070a03d91f140d249b7ff21b0\$lut for cells of type $lut.
Using template $paramod$4191be9654bc68553452deb70b8456eb4d042e78\$lut for cells of type $lut.
Using template $paramod$5089edb4824ba3b5325d7a025e3fa7525915e501\$lut for cells of type $lut.
Using template $paramod$f74a8ad9b5b504bb4dcfcec313f075e711c41944\$lut for cells of type $lut.
Using template $paramod$1bb178f35714b8a20a948d3b7a114eb70fe7e762\$lut for cells of type $lut.
Using template $paramod$4b8485b8ed39976628d13615ee4221002d911e17\$lut for cells of type $lut.
Using template $paramod$9d3a7268c185d1e76896087d2ccb9b183e1bec38\$lut for cells of type $lut.
Using template $paramod$4aa49ce8020a606b75ef92e2fe61a63ad4741def\$lut for cells of type $lut.
Using template $paramod$cec3bcc04b08427c963606fd52ee5486d48efac4\$lut for cells of type $lut.
Using template $paramod$b6f4475bed77c0356b2565fba824e205492fb85a\$lut for cells of type $lut.
Using template $paramod$650c2fc80cfccea34d77a3b28e442d09a7813fe7\$lut for cells of type $lut.
Using template $paramod$f01bc3b59237a0bf666ecd01389013087a86ed77\$lut for cells of type $lut.
Using template $paramod$fed4c05ee2f89582aea23afdb2d1a6c9de61590c\$lut for cells of type $lut.
Using template $paramod$dc1b8942c68d8dc66043cb4cef3632664cfcb31b\$lut for cells of type $lut.
Using template $paramod$954d048ad545fa78a68f7ccef9a79131b8de85dd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$c6143bdd9431af4eed68c9b51b91bf46da861e97\$lut for cells of type $lut.
Using template $paramod$fae3828c4ca6e34ca6fc4cf38e9e82a25c7f32ec\$lut for cells of type $lut.
Using template $paramod$524988ee1dc77873626a9552e29c60e7f5595a01\$lut for cells of type $lut.
Using template $paramod$2fe8cc12452cdd29fb908136ea4c510e931c0b6c\$lut for cells of type $lut.
Using template $paramod$6a12cc2a2a68d800c56ba778ad564c825999d3fb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010100 for cells of type $lut.
Using template $paramod$d4e52e4abafaf704998f418050848f5de55e7d5c\$lut for cells of type $lut.
Using template $paramod$334a5271290b867ccb8b6664cbe5e034eecc19c8\$lut for cells of type $lut.
Using template $paramod$1fc8ec67e548a858948003c9702ab8c537dde344\$lut for cells of type $lut.
Using template $paramod$e05924ecc436fe151d9b9f1944244d4c0548d8db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod$dd9e3d160c37e85d1aa9c575093d4e5ddf8cccf0\$lut for cells of type $lut.
Using template $paramod$6bca8d345d26829068ad91403a25fbe3e0885c1a\$lut for cells of type $lut.
Using template $paramod$5eb0904e012d234de8f46a2296b2ab500602ad08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod$7db39653a61aa651f4770e675c2ed23704517e4b\$lut for cells of type $lut.
Using template $paramod$ad459c5c603d703cab249d4827c36c65068a6d69\$lut for cells of type $lut.
Using template $paramod$9a3b309fbe6eeeaf7176ded7e9b3aaf582f74dbf\$lut for cells of type $lut.
Using template $paramod$0645a7150852760522810746896c12f94cd12bdb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101101 for cells of type $lut.
Using template $paramod$fde34d7b7d817d093917fab37479be42cf9a4427\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$f8b745b0eed913d826b5344414a1a929407f924b\$lut for cells of type $lut.
Using template $paramod$22c9be04541605d170999996529964300ddae5b2\$lut for cells of type $lut.
Using template $paramod$2bb25c6481e099e7dcccfa716fc81b003ba848d7\$lut for cells of type $lut.
Using template $paramod$55725729938d3fec771e39eb239f3a39b66fa711\$lut for cells of type $lut.
Using template $paramod$d53cf564610b4bee7ab88c13a9daacbf29576c42\$lut for cells of type $lut.
Using template $paramod$27281f7bd9372efd4584298078d39f48bab055b1\$lut for cells of type $lut.
Using template $paramod$4e796a6fbf3d55b6556dc40ef4308887d326ee47\$lut for cells of type $lut.
Using template $paramod$da09f47a5703eb9ec672700b2376a4fc0c51a47c\$lut for cells of type $lut.
Using template $paramod$88d7940e19ae95bce23830332bd2eb98fe3b2e9f\$lut for cells of type $lut.
Using template $paramod$8fdadcdf3bd6c7e3665bd00261756ae2985715f3\$lut for cells of type $lut.
Using template $paramod$11c1b95c259fe929b11bef84cb49c4ba1e644ad3\$lut for cells of type $lut.
Using template $paramod$41c9827d0a5309e1690b0bdfa6d82dced725fbc4\$lut for cells of type $lut.
Using template $paramod$e34f51d9d6afc0958736db0c2f6b412a4d7a9ced\$lut for cells of type $lut.
Using template $paramod$815a5cc0d710a8085ee6bf614621e907fdc27cf8\$lut for cells of type $lut.
Using template $paramod$57dfe7e1cf77057adb38070225fd8cac6d4ff1c4\$lut for cells of type $lut.
Using template $paramod$01451a581812bc783c67e96d5517d9dda146e312\$lut for cells of type $lut.
Using template $paramod$43abdf64895d9947f9a53d4e9239fc85446beeba\$lut for cells of type $lut.
Using template $paramod$142bdbb23fc93cb1d281c477ad9d76da313e6ec1\$lut for cells of type $lut.
Using template $paramod$84212aa9cfe2b2158e2c8f93a743305e49ed7f7a\$lut for cells of type $lut.
Using template $paramod$cf79e26db8a84e0e47b7f2a506e4bd57a34906b1\$lut for cells of type $lut.
Using template $paramod$79a77139558a6e7ca4d0007bad618a1580d68b7f\$lut for cells of type $lut.
Using template $paramod$b31cca12c19064ad2178af1070268abc826d0581\$lut for cells of type $lut.
Using template $paramod$a1d21f0fb233f5330256faccd6e5edfb275e661c\$lut for cells of type $lut.
Using template $paramod$31e86b47416345532adf0d68d159d6871c7d5986\$lut for cells of type $lut.
Using template $paramod$ca55a79ed7746d5af572d37a7e13406b46a4ef79\$lut for cells of type $lut.
Using template $paramod$ffb543685ac0721ac532fd23edc9d7a2a3763859\$lut for cells of type $lut.
Using template $paramod$c2e4b0b6b284d786c81b13ca351c2143630d4892\$lut for cells of type $lut.
Using template $paramod$fbbd76050fa814586f5b80ce48dcfde9fe87dc6a\$lut for cells of type $lut.
Using template $paramod$76614f1301f0085882be276e63ee17b69d2267ee\$lut for cells of type $lut.
Using template $paramod$1c81dd561e7fd34ad98f963b60637b2dc6b402e6\$lut for cells of type $lut.
Using template $paramod$1d451a5918e0c4a74fd5457b4f7b72274e0aa017\$lut for cells of type $lut.
Using template $paramod$6e5e65e8e60ed0f5faba5f3a4739f2442f8aa2a6\$lut for cells of type $lut.
Using template $paramod$c72e4728cc76197a67cb5cecfb3b24089367983f\$lut for cells of type $lut.
Using template $paramod$a2b4ddfa3906001b2ef9f2414d79c3048f2a3a6e\$lut for cells of type $lut.
Using template $paramod$334540cb0c0005d77b6d3deaf34fafe3dd92c173\$lut for cells of type $lut.
Using template $paramod$bdbca9bb9941853cce5c2e083ac22384fcafb5f8\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$8a5f9dfa034ac29565378fce1448f8be5d006177\$lut for cells of type $lut.
Using template $paramod$5e94b3ae74f287a94d40a4db43f1ffca1b4a0aac\$lut for cells of type $lut.
Using template $paramod$dc3ffaf372e6a1ff543cb54eb87b886d9a009bba\$lut for cells of type $lut.
Using template $paramod$9bc13b2a39c4e3a3b5dd388eaadf25f5605b7d95\$lut for cells of type $lut.
Using template $paramod$b669ef8fe4b848b9999eec0c993051f5231e959f\$lut for cells of type $lut.
Using template $paramod$6c9aeb3c2763e21617687d0c2c88df0403de5e49\$lut for cells of type $lut.
Using template $paramod$69bbf10773fad9d6f3a27c8cb2dafc15a8834b59\$lut for cells of type $lut.
Using template $paramod$d07cf2877fa65bdd7db9a8ebca9e233078dac749\$lut for cells of type $lut.
Using template $paramod$dde057656bcd81f5d7d475179a3c98fb8c162011\$lut for cells of type $lut.
Using template $paramod$6aeb78867eabdeefb31a5730403cc915deb67f00\$lut for cells of type $lut.
Using template $paramod$b3f343bfdff1211c9719d988b879e5fd027e0663\$lut for cells of type $lut.
Using template $paramod$7a0812c883b980cfc04516eede1ef79a32502988\$lut for cells of type $lut.
Using template $paramod$764112be38df977695be8ee716d4c11e4b7383ba\$lut for cells of type $lut.
Using template $paramod$dc2a1751f41fb5e86ce5b344b0615c0bbaf12de3\$lut for cells of type $lut.
Using template $paramod$24f381c02b5eff5cc39605d64ab187397f594e87\$lut for cells of type $lut.
Using template $paramod$0d44051560e61c8b8ffe2992053371f8f369743b\$lut for cells of type $lut.
Using template $paramod$80f5cddeb8ca10b903c4076c0bafc0b58bb55ea7\$lut for cells of type $lut.
Using template $paramod$0a1332b0c912cd11bff4a185c1875f01a34f66ba\$lut for cells of type $lut.
Using template $paramod$60d6a2f335aa707d99f5c97af905e33141975648\$lut for cells of type $lut.
Using template $paramod$78cf86f8202c523a4e17432f9f8b1d286947b3fd\$lut for cells of type $lut.
Using template $paramod$c71c7320b5d60c7a94b142bd28897ca4f2a29ae9\$lut for cells of type $lut.
Using template $paramod$af44ad8876cb728be22555d09cc3de63e97f0982\$lut for cells of type $lut.
Using template $paramod$e3407f238826607680b1525435c5787e5a9f8bcc\$lut for cells of type $lut.
Using template $paramod$9da7351507b14199100c242351caa6b05c38f329\$lut for cells of type $lut.
Using template $paramod$962c8792e8dae42c1e6ed2ffbc069a56aa0e412f\$lut for cells of type $lut.
Using template $paramod$7d1ae1b063460ce0df1fdf86ec12d9674d6a32a5\$lut for cells of type $lut.
Using template $paramod$9c4f81446431143b080af55ce73dd4b18d0bf0f9\$lut for cells of type $lut.
Using template $paramod$e4f4a199d9b6421355933e004aa12012277aeffa\$lut for cells of type $lut.
Using template $paramod$86251b17df43a2a214601d1b3152cbb94735f999\$lut for cells of type $lut.
Using template $paramod$ad5e2cbca87e4e448a59d606c1753c3929070a70\$lut for cells of type $lut.
Using template $paramod$1bc9b0af5b93ca5aabef795389ad3d2fd6b8ab45\$lut for cells of type $lut.
Using template $paramod$e8c1c5a527b5dfd56746085998c37b18e6d2f76b\$lut for cells of type $lut.
Using template $paramod$35c57873920eba13532dc5e01a428ff1c2ae8a65\$lut for cells of type $lut.
Using template $paramod$e78d38358461f14391471892fef4d51e694820c2\$lut for cells of type $lut.
Using template $paramod$f98f38ec8607e1c913b5b1db4ab083219f681b08\$lut for cells of type $lut.
Using template $paramod$09932ed1d4c1b33744d0972f619434ab06a339f0\$lut for cells of type $lut.
Using template $paramod$ec5f3c71ea7191b18cb9fa28b723f947dfea2cef\$lut for cells of type $lut.
Using template $paramod$08e8376a04f763dcc3e6d3ce8adfa534f7b9c18a\$lut for cells of type $lut.
Using template $paramod$1a26dff4f9c927b1adad8dc27690b78a2501e0c1\$lut for cells of type $lut.
Using template $paramod$b1ff29e8ab451a0364237f7b3c6054d6427e96dd\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$36ad91528f4d450ca6fd637eafd7240aceb85a45\$lut for cells of type $lut.
Using template $paramod$d657255231851ae21d5073f6e39caac000454bd2\$lut for cells of type $lut.
Using template $paramod$9d2166afb6a7dfc012c96b4d5c173c4eaf18fbaf\$lut for cells of type $lut.
Using template $paramod$2c7ba4edfba4ed7f07c2b03318768d450793a024\$lut for cells of type $lut.
Using template $paramod$585eddf611af7e9d8a8f9bb0ebd8185094df795f\$lut for cells of type $lut.
Using template $paramod$4597ae98b23391e06ee80eab44cb39fe48a49419\$lut for cells of type $lut.
Using template $paramod$3715e030843042ce1e50b29dc7df62faa89276bd\$lut for cells of type $lut.
Using template $paramod$14e3e95a0aba80463ec9eb8911ea18bbe49947aa\$lut for cells of type $lut.
Using template $paramod$8769a5d5c7d425c97c619cbcd2c651e76773fc26\$lut for cells of type $lut.
Using template $paramod$0974cc99d66ed1640630c6a0224e51f70814bcac\$lut for cells of type $lut.
Using template $paramod$71dd5a96b73f3020176e8f7d5f4e433ae03a42ed\$lut for cells of type $lut.
Using template $paramod$53af0a7c0e32b10509859bd2db17df4b846e7233\$lut for cells of type $lut.
Using template $paramod$af15bd2663c5fce6e794a6787f53b28a3900b378\$lut for cells of type $lut.
Using template $paramod$a0646d644141cfe7f0794fd3b95a438d4c022955\$lut for cells of type $lut.
Using template $paramod$22b4062c68b50488c68ad7a5ec895a9539cc58b9\$lut for cells of type $lut.
Using template $paramod$bafdb9689ccaf3b82d2d52effc76d51834b6a7b4\$lut for cells of type $lut.
Using template $paramod$4bf6738d009235e5d73a77d30968ad98006afef2\$lut for cells of type $lut.
Using template $paramod$6b17130caa2f202a7228371eb3c81cefe3bcdac1\$lut for cells of type $lut.
Using template $paramod$0187a09d344ad26e3d45afa64f1a472c7c994ef2\$lut for cells of type $lut.
Using template $paramod$c337e76f8f37e20a2efc4ab8063c9687fd5a2007\$lut for cells of type $lut.
Using template $paramod$8875f6ad8d303a7a144a29cc1077d4ceacb11197\$lut for cells of type $lut.
Using template $paramod$40775959f6ebb8702ba9e7ad6851a55ac94b4e67\$lut for cells of type $lut.
Using template $paramod$3b7f76bda0be66985c379f5c5bd884d7bb70285e\$lut for cells of type $lut.
Using template $paramod$efbce79b7c8e327d392bd30660268da2b60e0914\$lut for cells of type $lut.
Using template $paramod$5fa5cf71d47d03554141b3994c5b93d47e83c9f8\$lut for cells of type $lut.
Using template $paramod$b7f94ffa4dd4d19751f4411f21a16ae65d8f162a\$lut for cells of type $lut.
Using template $paramod$7820d398d9e410c3d34f48e690e9fa3127bfbf6f\$lut for cells of type $lut.
Using template $paramod$eb3bfdab96b39943604c18d6f25fc7f0606bf679\$lut for cells of type $lut.
Using template $paramod$008e35c32161ed4e0e1cc1fbff9b529f4560c6a2\$lut for cells of type $lut.
Using template $paramod$eaae38ef28d8f417ba01cc89806461f6d9a8d82b\$lut for cells of type $lut.
Using template $paramod$5d2f95302dc7fa2b7b572817f756545ec5ac3c54\$lut for cells of type $lut.
Using template $paramod$20c10324982acca756d2b868f74445001294c8da\$lut for cells of type $lut.
Using template $paramod$216456b90272bfda6f14d1844d21f60abae170f2\$lut for cells of type $lut.
Using template $paramod$a7eab12286a8fe0e359074e3f4484882dd091c25\$lut for cells of type $lut.
Using template $paramod$aec803c472f0ad457832239214ba2be7f3e29ebe\$lut for cells of type $lut.
Using template $paramod$9d7f27e6b997e0e0540fb4120a3552ea2de42ee5\$lut for cells of type $lut.
Using template $paramod$830b212a941bba03a14f032866917504155629f0\$lut for cells of type $lut.
Using template $paramod$461cff05646c5bc0ad933a8452584594c3367e63\$lut for cells of type $lut.
Using template $paramod$68d7f37f79c17812bbd2b4bd19b8985c49d6df6b\$lut for cells of type $lut.
Using template $paramod$720c5655531e0266486bde1a9db9171e355e7826\$lut for cells of type $lut.
Using template $paramod$0be38eff4eab77eb2be4ca928e79ab456ed3d6d9\$lut for cells of type $lut.
Using template $paramod$3b554f7a72c3ec5325ea533dcdfdaff0442ce114\$lut for cells of type $lut.
Using template $paramod$eb3a4e7248bbc16ee294cf3f3ca38aa7f2ab5ecf\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$53b1acb7e4425a0c27367f582e8ece159b87f7c5\$lut for cells of type $lut.
Using template $paramod$e0357b08c79fde54fe139045ca1b73105e0f1f9b\$lut for cells of type $lut.
Using template $paramod$0eee146dc9acd1f43aa0e0b38e5889483897c661\$lut for cells of type $lut.
Using template $paramod$3a32a7587b9f95b908af04fb9b75cd3eae00b58e\$lut for cells of type $lut.
Using template $paramod$568964b71d508937412fdd26a01103b547195ac1\$lut for cells of type $lut.
Using template $paramod$5928890fa2f83e9e865f472b77f9df31dbcf5c9a\$lut for cells of type $lut.
Using template $paramod$0d8275de5f0a2ce6fd0cb612fbfa81492bef934d\$lut for cells of type $lut.
Using template $paramod$0ea3ddac1902ac33ea090c6295777eeddcbba8b7\$lut for cells of type $lut.
Using template $paramod$a92567788228f9b2272479a18b945a1bd92e1da0\$lut for cells of type $lut.
Using template $paramod$180c7044c26c39c25b7b1e148507a441316d76fd\$lut for cells of type $lut.
Using template $paramod$af628360653165531731b741e71e83c98f396f98\$lut for cells of type $lut.
Using template $paramod$b4a56d36e49862e485f68e30754728bdb491c350\$lut for cells of type $lut.
Using template $paramod$d69a8c84278ad80852001c0e3d4cb30028a29aca\$lut for cells of type $lut.
Using template $paramod$44a97141e20147ba728a7b7ef85a3530bb642ecf\$lut for cells of type $lut.
Using template $paramod$c5a6a89fd51d01394d1004213b367c4851962a75\$lut for cells of type $lut.
Using template $paramod$0983c26432ee5f338d2a1d71ff3fc97bb478890c\$lut for cells of type $lut.
Using template $paramod$cc6f168b93470fcc711df6312603d46c5e4b0e07\$lut for cells of type $lut.
Using template $paramod$6ab7e30d4797213ff677962c6417fd0a069fe03e\$lut for cells of type $lut.
Using template $paramod$aef9f544980b7ab7c8ce710bcf8053fab67aab9d\$lut for cells of type $lut.
Using template $paramod$659925d18ef1c796530543de607aaf584b79338f\$lut for cells of type $lut.
Using template $paramod$862e29d65cc2abecda23d15fffcfade309cb5ad8\$lut for cells of type $lut.
Using template $paramod$a951ce4569cf936279d7f17228923af8420eb5eb\$lut for cells of type $lut.
Using template $paramod$98e8c3a7c9587094956289fd2c261cc30e3a8bd2\$lut for cells of type $lut.
Using template $paramod$f13a6bc4ecce1c317fe863d802ca721a37a4ea37\$lut for cells of type $lut.
Using template $paramod$e96b6c682ddd19bb49e15f9dac447b0ef9aedb8f\$lut for cells of type $lut.
Using template $paramod$e1f39ae8ee8e2111594c6a4063d5f1220c8bbed4\$lut for cells of type $lut.
Using template $paramod$a1fb261c4791e5f2263e51595a298951c27d694e\$lut for cells of type $lut.
Using template $paramod$85c381ab7140a4e6c9c98308f5282d3783ac6920\$lut for cells of type $lut.
Using template $paramod$da19f49cc51551f2ebcc0d53feeb4e00934ce36a\$lut for cells of type $lut.
Using template $paramod$be993e061b0cd0a9c4aa5b8f597adb39443bc0e5\$lut for cells of type $lut.
Using template $paramod$94f8c334d0a16f1cbcefd13eeefb99a0a1c0aad6\$lut for cells of type $lut.
Using template $paramod$4f6605cef9547976d016fe761e00d5eee4fb12b3\$lut for cells of type $lut.
Using template $paramod$cacf0dc4ba2e0ff05f453087b70bfd1077e8720c\$lut for cells of type $lut.
Using template $paramod$45d121f6b2c5631dbeddfd93231b66ea1938bce5\$lut for cells of type $lut.
Using template $paramod$8575f95813c109764c4b3688a1068494826ffe8e\$lut for cells of type $lut.
Using template $paramod$d622bf3171393a08df0a1e9db32341b3b17507f7\$lut for cells of type $lut.
Using template $paramod$3530dbe9075ca92a39f6bd93a738c8d106ef61f0\$lut for cells of type $lut.
Using template $paramod$860e744f2ebd4309625f25561b88a3e25f157e3c\$lut for cells of type $lut.
Using template $paramod$0585d16505b18521815256dfe44667320dbaa907\$lut for cells of type $lut.
Using template $paramod$171c77e742c0aead58ed6df3d9c62c7d5a4c2aef\$lut for cells of type $lut.
Using template $paramod$de089e6a9b46d00e2943d229ef356663de09e230\$lut for cells of type $lut.
Using template $paramod$a6766e320d89b19a2c01d85f24c777926c5a5c21\$lut for cells of type $lut.
Using template $paramod$4b92eaace1492ecab52d2320ba1400ddfeb63de3\$lut for cells of type $lut.
Using template $paramod$2209e4ad885e7b7a271adebbac6e042f3922c9d8\$lut for cells of type $lut.
Using template $paramod$662aa0a39b9e25110115bde1c02f46570201d4f7\$lut for cells of type $lut.
Using template $paramod$f73861c8544f46823f0b3c84f17aadd5bb441928\$lut for cells of type $lut.
Using template $paramod$6f2964cf1a8b9f71a2e5c084c1f1f0a95bca0175\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$8158cabdefa856119e93d081d4e4f8bd1121ff8d\$lut for cells of type $lut.
Using template $paramod$13ac5d43113ac9db82f73fec5c16769d98c35de7\$lut for cells of type $lut.
Using template $paramod$f60d7b477c8570eef5be0f9250dd467ad16edfb1\$lut for cells of type $lut.
Using template $paramod$307ac8d2bd4597c16530f1b81c518f08458e80e6\$lut for cells of type $lut.
Using template $paramod$31197cdbfcb99df4ec9fc641795440db24acd69a\$lut for cells of type $lut.
Using template $paramod$906811923d9e2fd2661b9d2ed9aa16e4f93599dc\$lut for cells of type $lut.
Using template $paramod$d8c2a1d0fccfc0b7dda23de74d36738ea60e5996\$lut for cells of type $lut.
Using template $paramod$fbf403a41749c423e8f99085993cea548485c32e\$lut for cells of type $lut.
Using template $paramod$95d68cdf27d7f8ecca651942748daa917229b104\$lut for cells of type $lut.
Using template $paramod$cd8a7e140ac4cf381cc79bd53e5b5760f0402c5c\$lut for cells of type $lut.
Using template $paramod$f31732b9cffa032382b06d76d35605655e046618\$lut for cells of type $lut.
Using template $paramod$0e47c415c830902f5365801490a2bcc9c58c262a\$lut for cells of type $lut.
Using template $paramod$7ac60d4cae5fecc6293f66837845e8f54da56078\$lut for cells of type $lut.
Using template $paramod$c9abdbe6907548e03b466f9f25be65f854789b03\$lut for cells of type $lut.
Using template $paramod$1cf1c1c1d23403391875c86b1ad633a761931409\$lut for cells of type $lut.
Using template $paramod$46beb1e8306baf4c25f403dfa1eae6cb22ebf9ad\$lut for cells of type $lut.
Using template $paramod$1324b7e169974433de473b3c849a7618d85d7ac8\$lut for cells of type $lut.
Using template $paramod$bb708988092290312725f194a9e29d53e8ce246f\$lut for cells of type $lut.
Using template $paramod$ede6eba4fcd1740708440f94236adfc0d21efd12\$lut for cells of type $lut.
Using template $paramod$fdec1b08d9cc0242d6f59b8c70bc5683272921b2\$lut for cells of type $lut.
Using template $paramod$c5f98c8f29ab7e06b3ebccf0f9f0e3e578c9d770\$lut for cells of type $lut.
Using template $paramod$cfedd473e69d5fcdd15388ce71e031f027a567c0\$lut for cells of type $lut.
Using template $paramod$50da91b0ad2d17072be07e1d5f1f990ccd1bd231\$lut for cells of type $lut.
Using template $paramod$e6f697a41ca7eee89294c8f6f932c649b32363f3\$lut for cells of type $lut.
Using template $paramod$16863281a9301e30ffd8706341550763fea6fed9\$lut for cells of type $lut.
Using template $paramod$76fab1a38138764359bfaaaccd7d53e7b4f030bc\$lut for cells of type $lut.
Using template $paramod$783935e6af78b6616e329d856f362c4fd2857d5d\$lut for cells of type $lut.
Using template $paramod$45b4d00f395daa84314776ccf3137f12d8a80d42\$lut for cells of type $lut.
Using template $paramod$7db4f61df6e04f486c530800fa171327366d85d8\$lut for cells of type $lut.
Using template $paramod$99bf80fca3ed9a6efeb6a988ce32ea252f1dbea4\$lut for cells of type $lut.
Using template $paramod$6e20e6f86b8fb5a34eeb882012739533d231b91a\$lut for cells of type $lut.
Using template $paramod$4fc3201075918fe7754a564a7dfda585eb6867fe\$lut for cells of type $lut.
Using template $paramod$cc32a05866f608aca38637d6c7ba9e5d077e8484\$lut for cells of type $lut.
Using template $paramod$a88d0ee728d0a041f6d9367305189a87f64db02a\$lut for cells of type $lut.
Using template $paramod$304f1532bde6f0812029f10b0ba88cf3310fd0fb\$lut for cells of type $lut.
Using template $paramod$0fb83a6db4a749e6f5ec4687400a6fdce3fde710\$lut for cells of type $lut.
Using template $paramod$3bcc1204afc5961174b4d43e0524595c96014788\$lut for cells of type $lut.
Using template $paramod$159e4b80a27357913fa885a2a1b4303a38360dce\$lut for cells of type $lut.
Using template $paramod$8ae9bfe3e43e24516d5725efea8f3acc1c135724\$lut for cells of type $lut.
Using template $paramod$739699ba3f3695276f89f4a880499c3555536567\$lut for cells of type $lut.
Using template $paramod$a7e08ab2e10e356cf265124676d60918b4a2e5a9\$lut for cells of type $lut.
Using template $paramod$d40e6f4cf7364ea2f29e250036b4e773f2ee42c8\$lut for cells of type $lut.
Using template $paramod$ec61a3bed9c812c0581314d75db42f57c3972c43\$lut for cells of type $lut.
Using template $paramod$ce71ed242613b873ad8562afaa3bf6123ea82231\$lut for cells of type $lut.
Using template $paramod$77d2e1db305b9c2ffef2eada98a090f444e1a7cb\$lut for cells of type $lut.
Using template $paramod$284a4aa44f933323ec0afb21e782713c045fa9e1\$lut for cells of type $lut.
Using template $paramod$b6c38e4030368b54eceead0f0edc9b241497c0be\$lut for cells of type $lut.
Using template $paramod$5ce4cf19322474965520742197602726304ea66f\$lut for cells of type $lut.
Using template $paramod$9b9d5c1ec035546221e0dd74d2adf87cb445afd4\$lut for cells of type $lut.
Using template $paramod$55879506faca371808643c4901afffc22434dfca\$lut for cells of type $lut.
Using template $paramod$ac087e814c782e5c31b3a33400d02524b4faa9d1\$lut for cells of type $lut.
Using template $paramod$16f4d5a320f8c31ec68e2957f4cfe520c3f549a4\$lut for cells of type $lut.
Using template $paramod$de7f90bad373f1055a1d58a2b73552d4ad3cdaa9\$lut for cells of type $lut.
Using template $paramod$a5763bf6276dba640667d9b925e2f79f0771d14c\$lut for cells of type $lut.
Using template $paramod$405dcbd2e40fa4886b5909cb6a991b55634d4daf\$lut for cells of type $lut.
Using template $paramod$a8f0b66d6442d140b08ba5dde7bccc974236df60\$lut for cells of type $lut.
Using template $paramod$8461a38da2644081983cd5b082d7f6c55a8dc5b7\$lut for cells of type $lut.
Using template $paramod$f076961b89f8f6554aa12b9fdf31e079becec60a\$lut for cells of type $lut.
Using template $paramod$97ce0b4b371a171248922e25d81b92109ef45ff9\$lut for cells of type $lut.
Using template $paramod$13367168a858ecbb4f72b07092ef1f315a940177\$lut for cells of type $lut.
Using template $paramod$fe2ccc9771c7f3621af3392ea69c0322e13310d4\$lut for cells of type $lut.
Using template $paramod$bfc6e9cbe3c9c007686f9a45ac8e0fc13fcd085f\$lut for cells of type $lut.
Using template $paramod$00da420f1273c82a5a85fab8111527a7bbb2801c\$lut for cells of type $lut.
Using template $paramod$9e5434836e049372cdfece06d35e7e69ec617c77\$lut for cells of type $lut.
Using template $paramod$b7f8067fdce38dc389013c6a02626eab4df583cb\$lut for cells of type $lut.
Using template $paramod$943e77abbec4d3408e7fa9294f264c50b8f4531b\$lut for cells of type $lut.
Using template $paramod$dfac20d76272cf52de63471bb6dc92614bf31dce\$lut for cells of type $lut.
Using template $paramod$4086e235c7af48a1bf9c639ae40740e0cec76d50\$lut for cells of type $lut.
Using template $paramod$9786a063e828ffd83a6d336f9d7e6dd83f3f605d\$lut for cells of type $lut.
Using template $paramod$a150966448682d30f52c1750884d89a3c1b56e1c\$lut for cells of type $lut.
Using template $paramod$8821a9d208d3993408311630ae5d450c7b9ecb28\$lut for cells of type $lut.
Using template $paramod$32caca831d0b4cac4fab8f9cffe8fa3643b686b9\$lut for cells of type $lut.
Using template $paramod$fb07f6e1534580f3b11c7a3a59d8cd09f6c8c995\$lut for cells of type $lut.
Using template $paramod$b7547ddca972641a71df7877a38f05fb8d921ed3\$lut for cells of type $lut.
Using template $paramod$0ed5f0499e34c7dc6a554c4554cd71d49c1fa797\$lut for cells of type $lut.
Using template $paramod$c01f9cf1fc8fb4102b734502b30038d478c1c0e9\$lut for cells of type $lut.
Using template $paramod$d3b2f23c2c3224489ece6db35b8140b9ca94155f\$lut for cells of type $lut.
Using template $paramod$210391ef75f099631d82908167766dd3da1430d6\$lut for cells of type $lut.
Using template $paramod$dfd57607b12cbcfa0282cd45553eece614a60bf8\$lut for cells of type $lut.
Using template $paramod$9af0e97b1bc9ceede0e7b5cbf96fd897334690cf\$lut for cells of type $lut.
Using template $paramod$c315fd171a22ad0b563d890e3adda172ea240769\$lut for cells of type $lut.
Using template $paramod$7c658172007442b269a6f142dc8ea66c31438ea4\$lut for cells of type $lut.
Using template $paramod$a25faa32fc006e38c2a737b4e977c43e207f98b0\$lut for cells of type $lut.
Using template $paramod$7b26446b9891231ee162dd702f9f9f1a99f6285f\$lut for cells of type $lut.
Using template $paramod$c96d994ba817e5d7ca09c21d0c6ed9bdd1ac4745\$lut for cells of type $lut.
Using template $paramod$a9d8247ce3c534256335b6adbbaa1e0712747947\$lut for cells of type $lut.
Using template $paramod$7a3ebf12fd04568495abf1a115208a255d8f8017\$lut for cells of type $lut.
Using template $paramod$8ee0f9b7f03b8527d399cd0f9a4a292fff394b00\$lut for cells of type $lut.
Using template $paramod$9dd5e43b85fb1cdffca5fdd153fb2dc45a730f26\$lut for cells of type $lut.
Using template $paramod$dcc6b52b90e201cfec2a5178a97d675cc929a4d9\$lut for cells of type $lut.
Using template $paramod$f6433d335864701372f418737287c867009d6526\$lut for cells of type $lut.
Using template $paramod$552e3322e4b067f4d534291d7d7f0fa4db22b890\$lut for cells of type $lut.
Using template $paramod$8e64da590d8bbbe4cdf70d64862a5187cbd9aacb\$lut for cells of type $lut.
Using template $paramod$f028f55b59372daf726076b98dee16f9c0a94f43\$lut for cells of type $lut.
Using template $paramod$0ed4736b1191795b6e8974125fad0ebba3bd2971\$lut for cells of type $lut.
Using template $paramod$8d16d492a2edae5a94131febf63f3fa2e4c4dae9\$lut for cells of type $lut.
Using template $paramod$ae9346c1f92826f8772ed23f7830e6ec8e8bd50c\$lut for cells of type $lut.
Using template $paramod$5d62bc37e17f7a0d94355a1853e74d50df2af7c4\$lut for cells of type $lut.
Using template $paramod$2a8d89944ebc879ec18101232701201a9574de8d\$lut for cells of type $lut.
Using template $paramod$855f7d67d6db22f446c353ff59b774f4702be734\$lut for cells of type $lut.
Using template $paramod$1ce38d378ba5fc5371d9259762f78849733e39e4\$lut for cells of type $lut.
Using template $paramod$03ed66fe78edd0771f3f13881db02f3ef37dff6d\$lut for cells of type $lut.
Using template $paramod$a3865e133adffb39254ba899662609f4fb1269a7\$lut for cells of type $lut.
Using template $paramod$cda963bb608b2745c320fc4531f226518eb9d0c5\$lut for cells of type $lut.
Using template $paramod$4b43077392a4365d9c330215c4a16341cb06e5ee\$lut for cells of type $lut.
Using template $paramod$df2b3d2d9c94d7ba684169c356437d16f1a29efe\$lut for cells of type $lut.
Using template $paramod$8cce41c310e2210e71f010fa8781cf85729af689\$lut for cells of type $lut.
Using template $paramod$71d6d3d7653dd35f0f0d8d3740edf95dfe9e8e8e\$lut for cells of type $lut.
Using template $paramod$33466eacdcaef2d99fe28d08c41d35ba315367f5\$lut for cells of type $lut.
Using template $paramod$d72005d79374e2f8687babf63820d727ca0f430c\$lut for cells of type $lut.
Using template $paramod$cc778a82fd81ea9185402656ce1c9108e4328ce0\$lut for cells of type $lut.
Using template $paramod$738daacac7a6d80a89b2d97109b90db9b2708a27\$lut for cells of type $lut.
Using template $paramod$8cd814ba617ac0975b5e71811d92e96d72ab8bbb\$lut for cells of type $lut.
Using template $paramod$3068fc9d9825fd6ed7a0da71e30dad90b081caaf\$lut for cells of type $lut.
Using template $paramod$42253ec393aa297b297af920a318aa999ce61565\$lut for cells of type $lut.
Using template $paramod$4efd1b47743553d2acd3bf9d6f9320a0d69e4d5a\$lut for cells of type $lut.
Using template $paramod$27af436a4436bbefc8f1ed9df1277823fdcafb1c\$lut for cells of type $lut.
Using template $paramod$b75a2ff994f99d31f7bceb7978c6711d76017cf3\$lut for cells of type $lut.
Using template $paramod$263a40855bb77428060edb394588da72807397e4\$lut for cells of type $lut.
Using template $paramod$824bf2854b0bccba9f5d5b8fb0b9f5029e68dad7\$lut for cells of type $lut.
Using template $paramod$48b5dfc7c1eaed76d12f26179a0e0c8eb036b31a\$lut for cells of type $lut.
Using template $paramod$c0c59d25e957946d7e2267c9a450f184707cc9d1\$lut for cells of type $lut.
Using template $paramod$b4df7de795df36c4fcc8dc6c19c3ad1e6ebd3ddb\$lut for cells of type $lut.
Using template $paramod$b9af5d714105c927784be57651a793cfdfb85c9b\$lut for cells of type $lut.
Using template $paramod$c92fd02df1b6acf1c9a665d8abd0b29b62053afd\$lut for cells of type $lut.
Using template $paramod$2a30cb502e333eabd6109d11949abfc7249db7b8\$lut for cells of type $lut.
Using template $paramod$de329e4bb06121b6755942e0b55c4561f7455ebc\$lut for cells of type $lut.
Using template $paramod$b6b06add2553133c71eecc85769112ec63e08243\$lut for cells of type $lut.
Using template $paramod$0b93100bc8924a6064dc716e36d8342e4157a351\$lut for cells of type $lut.
Using template $paramod$3822a96264b8fda1d9a8aea07956153f72d78e9c\$lut for cells of type $lut.
Using template $paramod$2201dc5b5d001d303d2c2b53bc927dc00228320e\$lut for cells of type $lut.
Using template $paramod$1e13b7877e76a806687f0337685633493c96c09c\$lut for cells of type $lut.
Using template $paramod$1aa49ce02fc1202a5014563739a7205514907fd7\$lut for cells of type $lut.
Using template $paramod$a98a3f72381c953f685268dc923efa0bb245aa57\$lut for cells of type $lut.
Using template $paramod$43207054a098146b6e5110cde03894b67a385fc8\$lut for cells of type $lut.
Using template $paramod$baee406d84fe0a8ab3e46482a4f51900848b9595\$lut for cells of type $lut.
Using template $paramod$a305c1f27ac12036e1ee053f6f465794d7c5c73c\$lut for cells of type $lut.
Using template $paramod$d68bb3912b20d500d483c4107a1c61b85f745865\$lut for cells of type $lut.
Using template $paramod$d74e09462fda0d236ccfb82768bbd73155a8cdbb\$lut for cells of type $lut.
Using template $paramod$e21ebec36f5f7eceb31ec43111c79ddcf8ebc9bf\$lut for cells of type $lut.
Using template $paramod$235277db31c4a9023b047cd51317b0381a890340\$lut for cells of type $lut.
Using template $paramod$7125b224d5920c893c2dd3de98a266451c2ebe7d\$lut for cells of type $lut.
Using template $paramod$1ae3cc2aaef953f66d23a3428005bf3c2a64f907\$lut for cells of type $lut.
Using template $paramod$10f9ec10907e3614f4091bb6c69006195a5f5733\$lut for cells of type $lut.
Using template $paramod$0d9e15559e8efc4045ddda21fd11e715ec59b035\$lut for cells of type $lut.
Using template $paramod$4c6df3d9c94eba588d3a9703eb418f241e3c7478\$lut for cells of type $lut.
Using template $paramod$920ec15839217e84521780c843cb56b71bc7e1c2\$lut for cells of type $lut.
Using template $paramod$8f152908f2e4f48ddcaa9971f4554d408f6c6a45\$lut for cells of type $lut.
Using template $paramod$15e465e947aa87c07d3af9c64951debe4d4f6075\$lut for cells of type $lut.
Using template $paramod$f7defcd573066404c868253de2933d1a602e19fd\$lut for cells of type $lut.
Using template $paramod$50e19e0e60d4135b10e3942acbecde9609be653f\$lut for cells of type $lut.
Using template $paramod$ee6682f13f4058ad3f1adfcfc64fc4b737208600\$lut for cells of type $lut.
Using template $paramod$5f8ee4cbf9b8b96714ed8d25a69eb50a105ab5d9\$lut for cells of type $lut.
Using template $paramod$2e31f4044d7bd0157082c0cf6cd31540e3a6c8be\$lut for cells of type $lut.
Using template $paramod$278278da8d76ea5cbd78cd718b45f52986d1194a\$lut for cells of type $lut.
Using template $paramod$f49fb6b34f74bc0e4b39ba7c0f3298d843cb3cef\$lut for cells of type $lut.
Using template $paramod$26c6eee984c99ab7c3bb4a85cab5854f70684cc5\$lut for cells of type $lut.
Using template $paramod$e1e0860bc66b0ec3f1528c4ebf1eebcd83d23576\$lut for cells of type $lut.
Using template $paramod$f268adcb3676ed751eefdf4d8a09cbf983a88b50\$lut for cells of type $lut.
Using template $paramod$5160d959f4260239f4c67f6c0ca24ac28b23ae94\$lut for cells of type $lut.
Using template $paramod$81178781293cd1370744f8e128e8ea1c2c95c85a\$lut for cells of type $lut.
Using template $paramod$5233fb83f4fd288c518e0d699c5466e9250e701b\$lut for cells of type $lut.
Using template $paramod$48e23215fbd19c7a8cbf715928fa7ebd147f0956\$lut for cells of type $lut.
Using template $paramod$e5497d50f0a3bb532dc5145159e5f18278693031\$lut for cells of type $lut.
Using template $paramod$a8448efba8a701e7f7c78a979ecfe8680d7c3544\$lut for cells of type $lut.
Using template $paramod$1d11808f98f52ed8de41aac5ab9623f02ad104fe\$lut for cells of type $lut.
Using template $paramod$8a8efbada3d15cffb1eefc085237a7ca87f4c095\$lut for cells of type $lut.
Using template $paramod$5c70e950603d1092d5d3d1c5c6a4e9781ddfb3bc\$lut for cells of type $lut.
Using template $paramod$0583ca39854e3aa9f1c55e16020d40e1b6c8247d\$lut for cells of type $lut.
Using template $paramod$222282968ba8eae601ea275ef8943986cc252aa3\$lut for cells of type $lut.
Using template $paramod$ee829e6718e8774ed1c25e41642efb6b00f1f386\$lut for cells of type $lut.
Using template $paramod$275c1f62d9340ea74c75c2a4b46e14d119683d6b\$lut for cells of type $lut.
Using template $paramod$0e2f6b3723c7bab13cff2444b2062045bf0e531c\$lut for cells of type $lut.
Using template $paramod$748438a819d2378278dedf872c17da3557f0ef07\$lut for cells of type $lut.
Using template $paramod$3b1339f59fe465ba40a17d93b48b30e307cea59d\$lut for cells of type $lut.
Using template $paramod$4ae0986c1d71a5fda55dd57118fa3a5d8f14e17a\$lut for cells of type $lut.
Using template $paramod$52d136b49e06b5206c68f61b8691ddc171641456\$lut for cells of type $lut.
Using template $paramod$e5af56e83790e6a0a1387947b2f0432d5aae770c\$lut for cells of type $lut.
Using template $paramod$7e4d7a963343e53fbb8f8989dc55ac42a8f0f222\$lut for cells of type $lut.
Using template $paramod$b9cba4d76d52004e3dc638b4a4e97993095a4a14\$lut for cells of type $lut.
Using template $paramod$f0fad04209acff463190760c44e2054a5f5975fb\$lut for cells of type $lut.
Using template $paramod$90860a17db958d9784207e80a535182fb0751e90\$lut for cells of type $lut.
Using template $paramod$dca740317531fd1ee0eb24f7af67c4d41394466b\$lut for cells of type $lut.
Using template $paramod$c6877fb5524c621574f0e24d9171263cfb0df847\$lut for cells of type $lut.
Using template $paramod$2938cd0ffe3aaa209d4d48a957353047558f8b1d\$lut for cells of type $lut.
Using template $paramod$e9e9f31eeb53e5de1e9a422ef677aa629d3e0943\$lut for cells of type $lut.
Using template $paramod$71f95e353bdc4eaa38973aebcecb1d162214a5f7\$lut for cells of type $lut.
Using template $paramod$d02937e96a75107363d8b5dcd003fa74efdb5350\$lut for cells of type $lut.
Using template $paramod$09d160087c06ead2af6921baaefbc30387cf7de5\$lut for cells of type $lut.
Using template $paramod$04ae10f7d848c17f6abdd4c00ba30939b2cb4eb5\$lut for cells of type $lut.
Using template $paramod$f18ab3e7ef10361e60c739a0496c050b71b889a8\$lut for cells of type $lut.
Using template $paramod$1ee5f258df10caab55441ff3170844321f396a32\$lut for cells of type $lut.
Using template $paramod$d4ed84d5cc8a4b6170b6f5384f2795f77ef21b90\$lut for cells of type $lut.
Using template $paramod$8f6bec787a3337fac89493b032dcc42ab6787b76\$lut for cells of type $lut.
Using template $paramod$6ee8e7839b8152eea8f7752dd8fd8b7aee246de7\$lut for cells of type $lut.
Using template $paramod$eac7ee502612457d62e471974b70426d3c28f7fd\$lut for cells of type $lut.
Using template $paramod$94ac6b7bbb88d0cc562c4733f2e9fc3ea86715bc\$lut for cells of type $lut.
Using template $paramod$2fe70dc8f7d8d4c53e12686d9863d9ad022a4f68\$lut for cells of type $lut.
Using template $paramod$9c12681b7d0bc482696d8453f2e8966a563ebe77\$lut for cells of type $lut.
Using template $paramod$b18231f66ef166e7ef9922713b40015dfdf1f470\$lut for cells of type $lut.
Using template $paramod$52634d2a8659a07f7d1d844d07f004e75b59efd0\$lut for cells of type $lut.
Using template $paramod$a01667917b5d2cde958a6ed14e2a7f1b32d5fbc0\$lut for cells of type $lut.
Using template $paramod$756c22b81fc584dc5c358239f4c30329447df492\$lut for cells of type $lut.
Using template $paramod$1d46ff0b05286f32ae59c5bc0be5bb8b8a58054c\$lut for cells of type $lut.
Using template $paramod$760de7d1f423f198ffe933b4a1eb44d6a783997b\$lut for cells of type $lut.
Using template $paramod$06c5b63f8eaaf6861a366c6ba30aff0c403ac19a\$lut for cells of type $lut.
Using template $paramod$bd165429f7e37d02e245bd2ec8f9b3cfff008ec5\$lut for cells of type $lut.
Using template $paramod$d49963200e52e2dfaaf3cc6cd2e350075b48d503\$lut for cells of type $lut.
Using template $paramod$059a18b83f440098c69d0c68999bb03d1f1b1ff8\$lut for cells of type $lut.
Using template $paramod$6af023d04780a6b54e8dd53dc6126bcf1a45e79b\$lut for cells of type $lut.
Using template $paramod$d792639df542e95e2e2545d4cd272b6b31fd19b1\$lut for cells of type $lut.
Using template $paramod$49d70d2903f9bc766fa12e4d2524d87013c8bf3f\$lut for cells of type $lut.
Using template $paramod$b615df27726cbab4f3d719eeb64987118eff9796\$lut for cells of type $lut.
Using template $paramod$1f638f5c7e8f98d582ebf11c91990d5790e702a4\$lut for cells of type $lut.
Using template $paramod$4fecd6f048c13201e253aa7a8c8071b66ae8f69c\$lut for cells of type $lut.
Using template $paramod$fc2b5519b242fc4878a114aaab3e1ba68f7448bc\$lut for cells of type $lut.
Using template $paramod$b99ef1c5d1d86805c09482053031ea6ff513a718\$lut for cells of type $lut.
Using template $paramod$41eae325d5dd8aaac0a3f82eb4d5442edbb81ed5\$lut for cells of type $lut.
Using template $paramod$726f3a3cb16527daba80d3b2ed6bed6e7180ed33\$lut for cells of type $lut.
Using template $paramod$6f33121be2b731d65061d42bc007dfc6329a2c39\$lut for cells of type $lut.
Using template $paramod$b4837919cb93e7c7a441fab355b0d0a09e436576\$lut for cells of type $lut.
Using template $paramod$f67053edb34022bbb6fe34cd3bebc7f881bdc769\$lut for cells of type $lut.
Using template $paramod$c31146879f152e994599dd0025c4135c2dcc6ce2\$lut for cells of type $lut.
Using template $paramod$a696d15e3e8af50c420e5f3a21b0e7bc5f1d2929\$lut for cells of type $lut.
Using template $paramod$7179c7f69c2ffdf53dd8da6e2dc2f63677b69f4b\$lut for cells of type $lut.
Using template $paramod$0883434bc60ad64ca1401ca23ab26a925e80f4f0\$lut for cells of type $lut.
Using template $paramod$2f0e9ad540bb0797f243ac3a6913f3bba2f012dd\$lut for cells of type $lut.
Using template $paramod$fe8cc08e3471331d609124c4713c323c458b70b9\$lut for cells of type $lut.
Using template $paramod$f1bdf5268949b7a35eadbfacdb53293543d36a3a\$lut for cells of type $lut.
Using template $paramod$e48f211ac60a808c8af7fa66d5b352fe28bf7592\$lut for cells of type $lut.
Using template $paramod$ec129e132ce16b0b74321a86d64bcef5f539837f\$lut for cells of type $lut.
Using template $paramod$895470d58cc5fc21e15b695c4e620ac7b8aad888\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7350 debug messages>

8.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in booth_multiplier_wrapper.
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$436.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$436.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$899.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$462.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1723.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1723.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1299.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1299.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1517.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1586.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1655.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1517.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1268.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$852.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1936.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1936.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1723.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1723.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1015.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2410.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2470.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$462.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$565.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2289.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$491.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$921.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$899.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$899.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$393.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$436.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1655.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1586.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1299.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$899.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$462.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$1077.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1222.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1299.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1430.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1507.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1534.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$1578.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1586.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$1602.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1936.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2007.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2017.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2351.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$1111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$2470.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$462.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$286.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$436.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$462.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$2091.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$476.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6666$lut$aiger6665$367.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6666$lut$aiger6665$1283.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$345.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$899.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6666$lut$aiger6665$921.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)

8.26. Executing SETUNDEF pass (replace undef values with defined constants).

8.27. Executing HILOMAP pass (mapping to constant drivers).

8.28. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 5217 unused wires.

8.29. Executing AUTONAME pass.
Renamed 34328 objects in module booth_multiplier_wrapper (93 iterations).
<suppressed ~1978 debug messages>

8.30. Executing HIERARCHY pass (managing design hierarchy).

8.30.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper

8.30.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Removed 0 unused modules.

8.31. Printing statistics.

=== booth_multiplier_wrapper ===

   Number of wires:               1970
   Number of wire bits:           1970
   Number of public wires:        1970
   Number of public wire bits:    1970
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1170
     $scopeinfo                    145
     DFF                            14
     DFFE                           55
     DFFR                            1
     GND                             1
     IBUF                           15
     LUT1                           83
     LUT2                           70
     LUT3                          133
     LUT4                          247
     MUX2_LUT5                     232
     MUX2_LUT6                     105
     MUX2_LUT7                      45
     MUX2_LUT8                      16
     OBUF                            8

8.32. Executing CHECK pass (checking for obvious problems).
Checking module booth_multiplier_wrapper...
Found and reported 0 problems.

8.33. Executing Verilog backend.

8.33.1. Executing BMUXMAP pass.

8.33.2. Executing DEMUXMAP pass.
Dumping module `\booth_multiplier_wrapper'.

9. Printing statistics.

=== booth_multiplier_wrapper ===

   Number of wires:               1970
   Number of wire bits:           1970
   Number of public wires:        1970
   Number of public wire bits:    1970
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1170
     $scopeinfo                    145
     DFF                            14
     DFFE                           55
     DFFR                            1
     GND                             1
     IBUF                           15
     LUT1                           83
     LUT2                           70
     LUT3                          133
     LUT4                          247
     MUX2_LUT5                     232
     MUX2_LUT6                     105
     MUX2_LUT7                      45
     MUX2_LUT8                      16
     OBUF                            8

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 68bbe5b9e5, CPU: user 1.35s system 0.04s, MEM: 103.46 MB peak
Yosys 0.41+111 (git sha1 4b67f3757, clang++ 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 42% 1x abc9_exe (1 sec), 18% 8x techmap (0 sec), ...
